<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        v8KKMvr7XNDExMSfNDQ0bGzNoTEWhEZGaCapxUvbrXU/C9PTQLpUVwfR0npCQu6/wmCK+t6NPWXQqrJZ
        6+u4uNaBXeUWhJt3aNuVAsWpZnULC9NA7IJXBQfRen1CRO6/YIoy+vuNw6yqPJSyWVoj1YGBW8z0hEZ3
        qUm2rMVJZnV103tAgkVXB9HSen5C7r/Ciooy3qP3PZjQPLJZWiMk1oHaWxPFt0Zj3xRwjnDn56+vC0Ds
        gkUFB9F6fUJE7r9gijL6+/273MXdDbLr67heXtopc+bFkJXhTmYSEtsfr691P3uCgkUH0dJ6fkLuv8KK
        ivreo/33/pi+3VluOzsEBFtDtsWYE9tOTsty563p6XU/CwvsRUUH0Xp9QkTuv2CKMvr7o0+qxCFfxQBY
        WFhYWAL8xSwzJhpOTh2nHx/pr3U/C3t7gvHR0n1CQu6/wmCKMt6jT28eqjTXDACYmJgnmCcJLeBGpRpO
        HcunH+mvdT8Le3vsukXRen1CRO6/YIoy3vujbx486FluNLhKSjExMRkZW0ak4aXLHaenH+mvdT8Le0Ds
        uoLSen5E7r/Cior6+6NPbx486JTr6+rq1HxDKcCdpKThkaUfp6cf5691dQt7e+y6gih6fUJEv79gijLe
        o6NvHjzolLJaIyTVXilI9ZxnZxrhpXIfrecf6a91Pwt7QOy6gvF6QkTuv8KKivr7o09vHujosllaIyTW
        gSlI9Z1naOGRpR/nrXWv6XU/Cwt77Lq6KPF9QkS/v2CKMt77o08ePOiUslojJNWBgSlInGdoGuGlch/n
        r3U/P3U/C3tA7LqC8fFCRO6/woqK+vujT28e6OiyWVojJNaBKUj1nWca4ZFSH+etdT8L0wsLe3vsuroo
        8RVCRL+/YIoy3vujbx486JSyWiMk1YGBSEicZ2ga4aVSH+evdT8L00B7e0DsuoLx8RVE7r/Cior6+6NP
        bx7o6LJZWiPV1oEpSPWdZxrhkVIf5611PwvT00CC7EC6gijxFRVEv79gijLeo6NvHjzolLJaWiTVgYFI
        SJydaOGRpXIf5611PwvTQOyCRYK6gvHxFRXuv8KKMvr7o09vHjzosllaI9XWgSlI9Z1nGuGRUh/nrXU/
        C9N7QOyCRfHxKPEVFRW/wmCKMt77o08ePOiUslojJNaBgUj1nGdoGpGlcufnr3U/C9NA7IJFRfEV8fEV
        FRUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAEAAAAAAAAAAAAAAAB
        AAAAAAAAzZuoAO3O0wC1O1EAlDBMAJorRgDVlqIAqklgAJU0TwCXNE8AskRaANFTYgDFhZQAskhdAPv1
        9gDTV2UAxT1OAIMoRwDTW2gAvEdaAKY3TwCgPFUA115oAMpBUQC0VWkAuyg9AMhGVwDfp7EA2LC6AMhK
        WgDJSloAjDBNAO/JzgCuP1UAsD9VAM1OXQCyP1UAy1NjALY/VQC4P1UAlzhTALhDWAC5Q1gAryU+AMM9
        TwDMhJIA1FpmAP35+gChN1AAnDxWAMVBUgDARlgA36KsAIUsSwDYq7UApjtTAMRKWwCOME4A+vDyANBS
        YQDVeocAgSdGAJw3UQCdN1EAv0JWAKUySwDgxc0A6cDHAP79/gCKK0kArTZOANqvuQDiqrMArT5UAJcq
        RgDMTVwA4LO8AMCAkQCTM08AtT5UAJQzTwC+OEsAtUJXALdCVwCZN1IAq1BmAOW7wgC5RloA1FllAIMr
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>